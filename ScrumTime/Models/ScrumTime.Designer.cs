//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Releases_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Product), "Release", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Release), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Sprints_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Product), "Sprint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Sprint), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Stories_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Product), "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Story), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Stories_Sprints", "Sprint", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ScrumTime.Models.Sprint), "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Story), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Tasks_Stories", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Story), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Task), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Scrums_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Product), "Scrum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Scrum), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_ScrumDetails_Scrums", "Scrum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Scrum), "ScrumDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.ScrumDetail), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_ScrumDetails_Tasks", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Task), "ScrumDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.ScrumDetail), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Scrums_Sprints", "Sprint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Sprint), "Scrum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Scrum), true)]

#endregion

namespace ScrumTime.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScrumTimeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScrumTimeEntities object using the connection string found in the 'ScrumTimeEntities' section of the application configuration file.
        /// </summary>
        public ScrumTimeEntities() : base("name=ScrumTimeEntities", "ScrumTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScrumTimeEntities object.
        /// </summary>
        public ScrumTimeEntities(string connectionString) : base(connectionString, "ScrumTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScrumTimeEntities object.
        /// </summary>
        public ScrumTimeEntities(EntityConnection connection) : base(connection, "ScrumTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Release> Releases
        {
            get
            {
                if ((_Releases == null))
                {
                    _Releases = base.CreateObjectSet<Release>("Releases");
                }
                return _Releases;
            }
        }
        private ObjectSet<Release> _Releases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sprint> Sprints
        {
            get
            {
                if ((_Sprints == null))
                {
                    _Sprints = base.CreateObjectSet<Sprint>("Sprints");
                }
                return _Sprints;
            }
        }
        private ObjectSet<Sprint> _Sprints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Story> Stories
        {
            get
            {
                if ((_Stories == null))
                {
                    _Stories = base.CreateObjectSet<Story>("Stories");
                }
                return _Stories;
            }
        }
        private ObjectSet<Story> _Stories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScrumDetail> ScrumDetails
        {
            get
            {
                if ((_ScrumDetails == null))
                {
                    _ScrumDetails = base.CreateObjectSet<ScrumDetail>("ScrumDetails");
                }
                return _ScrumDetails;
            }
        }
        private ObjectSet<ScrumDetail> _ScrumDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Scrum> Scrums
        {
            get
            {
                if ((_Scrums == null))
                {
                    _Scrums = base.CreateObjectSet<Scrum>("Scrums");
                }
                return _Scrums;
            }
        }
        private ObjectSet<Scrum> _Scrums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSetting> UserSettings
        {
            get
            {
                if ((_UserSettings == null))
                {
                    _UserSettings = base.CreateObjectSet<UserSetting>("UserSettings");
                }
                return _UserSettings;
            }
        }
        private ObjectSet<UserSetting> _UserSettings;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Releases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReleases(Release release)
        {
            base.AddObject("Releases", release);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sprints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSprints(Sprint sprint)
        {
            base.AddObject("Sprints", sprint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStories(Story story)
        {
            base.AddObject("Stories", story);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScrumDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScrumDetails(ScrumDetail scrumDetail)
        {
            base.AddObject("ScrumDetails", scrumDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Scrums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScrums(Scrum scrum)
        {
            base.AddObject("Scrums", scrum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSettings(UserSetting userSetting)
        {
            base.AddObject("UserSettings", userSetting);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Product CreateProduct(global::System.Int32 productId, global::System.String name)
        {
            Product product = new Product();
            product.ProductId = productId;
            product.Name = name;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Releases_Products", "Release")]
        public EntityCollection<Release> Releases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Release>("ScrumTime.Models.FK_Releases_Products", "Release");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Release>("ScrumTime.Models.FK_Releases_Products", "Release", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Sprints_Products", "Sprint")]
        public EntityCollection<Sprint> Sprints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sprint>("ScrumTime.Models.FK_Sprints_Products", "Sprint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sprint>("ScrumTime.Models.FK_Sprints_Products", "Sprint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Stories_Products", "Story")]
        public EntityCollection<Story> Stories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Story>("ScrumTime.Models.FK_Stories_Products", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Story>("ScrumTime.Models.FK_Stories_Products", "Story", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Scrums_Products", "Scrum")]
        public EntityCollection<Scrum> Scrums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Scrum>("ScrumTime.Models.FK_Scrums_Products", "Scrum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Scrum>("ScrumTime.Models.FK_Scrums_Products", "Scrum", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Release")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Release : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Release object.
        /// </summary>
        /// <param name="releaseId">Initial value of the ReleaseId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="target">Initial value of the Target property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static Release CreateRelease(global::System.Int32 releaseId, global::System.String name, global::System.DateTime target, global::System.Int32 productId)
        {
            Release release = new Release();
            release.ReleaseId = releaseId;
            release.Name = name;
            release.Target = target;
            release.ProductId = productId;
            return release;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleaseId
        {
            get
            {
                return _ReleaseId;
            }
            set
            {
                if (_ReleaseId != value)
                {
                    OnReleaseIdChanging(value);
                    ReportPropertyChanging("ReleaseId");
                    _ReleaseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReleaseId");
                    OnReleaseIdChanged();
                }
            }
        }
        private global::System.Int32 _ReleaseId;
        partial void OnReleaseIdChanging(global::System.Int32 value);
        partial void OnReleaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private global::System.DateTime _Target;
        partial void OnTargetChanging(global::System.DateTime value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Releases_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Releases_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Releases_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Releases_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ScrumTime.Models.FK_Releases_Products", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Scrum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scrum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Scrum object.
        /// </summary>
        /// <param name="scrumId">Initial value of the ScrumId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="sprintId">Initial value of the SprintId property.</param>
        /// <param name="dateOfScrum">Initial value of the DateOfScrum property.</param>
        public static Scrum CreateScrum(global::System.Int32 scrumId, global::System.Int32 productId, global::System.Int32 sprintId, global::System.DateTime dateOfScrum)
        {
            Scrum scrum = new Scrum();
            scrum.ScrumId = scrumId;
            scrum.ProductId = productId;
            scrum.SprintId = sprintId;
            scrum.DateOfScrum = dateOfScrum;
            return scrum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScrumId
        {
            get
            {
                return _ScrumId;
            }
            set
            {
                if (_ScrumId != value)
                {
                    OnScrumIdChanging(value);
                    ReportPropertyChanging("ScrumId");
                    _ScrumId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScrumId");
                    OnScrumIdChanged();
                }
            }
        }
        private global::System.Int32 _ScrumId;
        partial void OnScrumIdChanging(global::System.Int32 value);
        partial void OnScrumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SprintId
        {
            get
            {
                return _SprintId;
            }
            set
            {
                OnSprintIdChanging(value);
                ReportPropertyChanging("SprintId");
                _SprintId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SprintId");
                OnSprintIdChanged();
            }
        }
        private global::System.Int32 _SprintId;
        partial void OnSprintIdChanging(global::System.Int32 value);
        partial void OnSprintIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfScrum
        {
            get
            {
                return _DateOfScrum;
            }
            set
            {
                OnDateOfScrumChanging(value);
                ReportPropertyChanging("DateOfScrum");
                _DateOfScrum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfScrum");
                OnDateOfScrumChanged();
            }
        }
        private global::System.DateTime _DateOfScrum;
        partial void OnDateOfScrumChanging(global::System.DateTime value);
        partial void OnDateOfScrumChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Scrums_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Scrums_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Scrums_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Scrums_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ScrumTime.Models.FK_Scrums_Products", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_ScrumDetails_Scrums", "ScrumDetail")]
        public EntityCollection<ScrumDetail> ScrumDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrumDetail>("ScrumTime.Models.FK_ScrumDetails_Scrums", "ScrumDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrumDetail>("ScrumTime.Models.FK_ScrumDetails_Scrums", "ScrumDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Scrums_Sprints", "Sprint")]
        public Sprint Sprint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("ScrumTime.Models.FK_Scrums_Sprints", "Sprint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("ScrumTime.Models.FK_Scrums_Sprints", "Sprint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sprint> SprintReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("ScrumTime.Models.FK_Scrums_Sprints", "Sprint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sprint>("ScrumTime.Models.FK_Scrums_Sprints", "Sprint", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="ScrumDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScrumDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScrumDetail object.
        /// </summary>
        /// <param name="scrumDetailId">Initial value of the ScrumDetailId property.</param>
        /// <param name="storyTaskDescription">Initial value of the StoryTaskDescription property.</param>
        /// <param name="assignedTo">Initial value of the AssignedTo property.</param>
        /// <param name="hoursCompleted">Initial value of the HoursCompleted property.</param>
        /// <param name="hoursRemaining">Initial value of the HoursRemaining property.</param>
        /// <param name="scrumId">Initial value of the ScrumId property.</param>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        public static ScrumDetail CreateScrumDetail(global::System.Int32 scrumDetailId, global::System.String storyTaskDescription, global::System.String assignedTo, global::System.Decimal hoursCompleted, global::System.Decimal hoursRemaining, global::System.Int32 scrumId, global::System.Int32 taskId)
        {
            ScrumDetail scrumDetail = new ScrumDetail();
            scrumDetail.ScrumDetailId = scrumDetailId;
            scrumDetail.StoryTaskDescription = storyTaskDescription;
            scrumDetail.AssignedTo = assignedTo;
            scrumDetail.HoursCompleted = hoursCompleted;
            scrumDetail.HoursRemaining = hoursRemaining;
            scrumDetail.ScrumId = scrumId;
            scrumDetail.TaskId = taskId;
            return scrumDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScrumDetailId
        {
            get
            {
                return _ScrumDetailId;
            }
            set
            {
                if (_ScrumDetailId != value)
                {
                    OnScrumDetailIdChanging(value);
                    ReportPropertyChanging("ScrumDetailId");
                    _ScrumDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScrumDetailId");
                    OnScrumDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _ScrumDetailId;
        partial void OnScrumDetailIdChanging(global::System.Int32 value);
        partial void OnScrumDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoryTaskDescription
        {
            get
            {
                return _StoryTaskDescription;
            }
            set
            {
                OnStoryTaskDescriptionChanging(value);
                ReportPropertyChanging("StoryTaskDescription");
                _StoryTaskDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoryTaskDescription");
                OnStoryTaskDescriptionChanged();
            }
        }
        private global::System.String _StoryTaskDescription;
        partial void OnStoryTaskDescriptionChanging(global::System.String value);
        partial void OnStoryTaskDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssignedTo
        {
            get
            {
                return _AssignedTo;
            }
            set
            {
                OnAssignedToChanging(value);
                ReportPropertyChanging("AssignedTo");
                _AssignedTo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssignedTo");
                OnAssignedToChanged();
            }
        }
        private global::System.String _AssignedTo;
        partial void OnAssignedToChanging(global::System.String value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HoursCompleted
        {
            get
            {
                return _HoursCompleted;
            }
            set
            {
                OnHoursCompletedChanging(value);
                ReportPropertyChanging("HoursCompleted");
                _HoursCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoursCompleted");
                OnHoursCompletedChanged();
            }
        }
        private global::System.Decimal _HoursCompleted;
        partial void OnHoursCompletedChanging(global::System.Decimal value);
        partial void OnHoursCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HoursRemaining
        {
            get
            {
                return _HoursRemaining;
            }
            set
            {
                OnHoursRemainingChanging(value);
                ReportPropertyChanging("HoursRemaining");
                _HoursRemaining = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoursRemaining");
                OnHoursRemainingChanged();
            }
        }
        private global::System.Decimal _HoursRemaining;
        partial void OnHoursRemainingChanging(global::System.Decimal value);
        partial void OnHoursRemainingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScrumId
        {
            get
            {
                return _ScrumId;
            }
            set
            {
                OnScrumIdChanging(value);
                ReportPropertyChanging("ScrumId");
                _ScrumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrumId");
                OnScrumIdChanged();
            }
        }
        private global::System.Int32 _ScrumId;
        partial void OnScrumIdChanging(global::System.Int32 value);
        partial void OnScrumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_ScrumDetails_Scrums", "Scrum")]
        public Scrum Scrum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scrum>("ScrumTime.Models.FK_ScrumDetails_Scrums", "Scrum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scrum>("ScrumTime.Models.FK_ScrumDetails_Scrums", "Scrum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Scrum> ScrumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scrum>("ScrumTime.Models.FK_ScrumDetails_Scrums", "Scrum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Scrum>("ScrumTime.Models.FK_ScrumDetails_Scrums", "Scrum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_ScrumDetails_Tasks", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ScrumTime.Models.FK_ScrumDetails_Tasks", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ScrumTime.Models.FK_ScrumDetails_Tasks", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ScrumTime.Models.FK_ScrumDetails_Tasks", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("ScrumTime.Models.FK_ScrumDetails_Tasks", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Sprint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sprint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sprint object.
        /// </summary>
        /// <param name="sprintId">Initial value of the SprintId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="finishDate">Initial value of the FinishDate property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static Sprint CreateSprint(global::System.Int32 sprintId, global::System.String name, global::System.DateTime startDate, global::System.DateTime finishDate, global::System.Int32 productId)
        {
            Sprint sprint = new Sprint();
            sprint.SprintId = sprintId;
            sprint.Name = name;
            sprint.StartDate = startDate;
            sprint.FinishDate = finishDate;
            sprint.ProductId = productId;
            return sprint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SprintId
        {
            get
            {
                return _SprintId;
            }
            set
            {
                if (_SprintId != value)
                {
                    OnSprintIdChanging(value);
                    ReportPropertyChanging("SprintId");
                    _SprintId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SprintId");
                    OnSprintIdChanged();
                }
            }
        }
        private global::System.Int32 _SprintId;
        partial void OnSprintIdChanging(global::System.Int32 value);
        partial void OnSprintIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FinishDate
        {
            get
            {
                return _FinishDate;
            }
            set
            {
                OnFinishDateChanging(value);
                ReportPropertyChanging("FinishDate");
                _FinishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishDate");
                OnFinishDateChanged();
            }
        }
        private global::System.DateTime _FinishDate;
        partial void OnFinishDateChanging(global::System.DateTime value);
        partial void OnFinishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Sprints_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Sprints_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Sprints_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Sprints_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ScrumTime.Models.FK_Sprints_Products", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Stories_Sprints", "Story")]
        public EntityCollection<Story> Stories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Story>("ScrumTime.Models.FK_Stories_Sprints", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Story>("ScrumTime.Models.FK_Stories_Sprints", "Story", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Scrums_Sprints", "Scrum")]
        public EntityCollection<Scrum> Scrums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Scrum>("ScrumTime.Models.FK_Scrums_Sprints", "Scrum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Scrum>("ScrumTime.Models.FK_Scrums_Sprints", "Scrum", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Story")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Story : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Story object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="narrative">Initial value of the Narrative property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static Story CreateStory(global::System.Int32 storyId, global::System.String narrative, global::System.Int32 points, global::System.Int32 priority, global::System.Int32 productId)
        {
            Story story = new Story();
            story.StoryId = storyId;
            story.Narrative = narrative;
            story.Points = points;
            story.Priority = priority;
            story.ProductId = productId;
            return story;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Narrative
        {
            get
            {
                return _Narrative;
            }
            set
            {
                OnNarrativeChanging(value);
                ReportPropertyChanging("Narrative");
                _Narrative = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Narrative");
                OnNarrativeChanged();
            }
        }
        private global::System.String _Narrative;
        partial void OnNarrativeChanging(global::System.String value);
        partial void OnNarrativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int32 _Points;
        partial void OnPointsChanging(global::System.Int32 value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserDefinedId
        {
            get
            {
                return _UserDefinedId;
            }
            set
            {
                OnUserDefinedIdChanging(value);
                ReportPropertyChanging("UserDefinedId");
                _UserDefinedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserDefinedId");
                OnUserDefinedIdChanged();
            }
        }
        private global::System.String _UserDefinedId;
        partial void OnUserDefinedIdChanging(global::System.String value);
        partial void OnUserDefinedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SprintId
        {
            get
            {
                return _SprintId;
            }
            set
            {
                OnSprintIdChanging(value);
                ReportPropertyChanging("SprintId");
                _SprintId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SprintId");
                OnSprintIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SprintId;
        partial void OnSprintIdChanging(Nullable<global::System.Int32> value);
        partial void OnSprintIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Stories_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Stories_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Stories_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ScrumTime.Models.FK_Stories_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ScrumTime.Models.FK_Stories_Products", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Stories_Sprints", "Sprint")]
        public Sprint Sprint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("ScrumTime.Models.FK_Stories_Sprints", "Sprint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("ScrumTime.Models.FK_Stories_Sprints", "Sprint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sprint> SprintReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("ScrumTime.Models.FK_Stories_Sprints", "Sprint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sprint>("ScrumTime.Models.FK_Stories_Sprints", "Sprint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Tasks_Stories", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("ScrumTime.Models.FK_Tasks_Stories", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("ScrumTime.Models.FK_Tasks_Stories", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        public static Task CreateTask(global::System.Int32 taskId, global::System.String description, global::System.Int32 storyId)
        {
            Task task = new Task();
            task.TaskId = taskId;
            task.Description = description;
            task.StoryId = storyId;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                if (_TaskId != value)
                {
                    OnTaskIdChanging(value);
                    ReportPropertyChanging("TaskId");
                    _TaskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskId");
                    OnTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private Nullable<global::System.Decimal> _Hours;
        partial void OnHoursChanging(Nullable<global::System.Decimal> value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                OnStoryIdChanging(value);
                ReportPropertyChanging("StoryId");
                _StoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoryId");
                OnStoryIdChanged();
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssignedTo
        {
            get
            {
                return _AssignedTo;
            }
            set
            {
                OnAssignedToChanging(value);
                ReportPropertyChanging("AssignedTo");
                _AssignedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssignedTo");
                OnAssignedToChanged();
            }
        }
        private global::System.String _AssignedTo;
        partial void OnAssignedToChanging(global::System.String value);
        partial void OnAssignedToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Tasks_Stories", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_ScrumDetails_Tasks", "ScrumDetail")]
        public EntityCollection<ScrumDetail> ScrumDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrumDetail>("ScrumTime.Models.FK_ScrumDetails_Tasks", "ScrumDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrumDetail>("ScrumTime.Models.FK_ScrumDetails_Tasks", "ScrumDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="UserSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSetting object.
        /// </summary>
        /// <param name="userSettingId">Initial value of the UserSettingId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static UserSetting CreateUserSetting(global::System.Int32 userSettingId, global::System.String username)
        {
            UserSetting userSetting = new UserSetting();
            userSetting.UserSettingId = userSettingId;
            userSetting.Username = username;
            return userSetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserSettingId
        {
            get
            {
                return _UserSettingId;
            }
            set
            {
                if (_UserSettingId != value)
                {
                    OnUserSettingIdChanging(value);
                    ReportPropertyChanging("UserSettingId");
                    _UserSettingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserSettingId");
                    OnUserSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _UserSettingId;
        partial void OnUserSettingIdChanging(global::System.Int32 value);
        partial void OnUserSettingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentProduct
        {
            get
            {
                return _CurrentProduct;
            }
            set
            {
                OnCurrentProductChanging(value);
                ReportPropertyChanging("CurrentProduct");
                _CurrentProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentProduct");
                OnCurrentProductChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentProduct;
        partial void OnCurrentProductChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentSprint
        {
            get
            {
                return _CurrentSprint;
            }
            set
            {
                OnCurrentSprintChanging(value);
                ReportPropertyChanging("CurrentSprint");
                _CurrentSprint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentSprint");
                OnCurrentSprintChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentSprint;
        partial void OnCurrentSprintChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentSprintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastMainTabSelected
        {
            get
            {
                return _LastMainTabSelected;
            }
            set
            {
                OnLastMainTabSelectedChanging(value);
                ReportPropertyChanging("LastMainTabSelected");
                _LastMainTabSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastMainTabSelected");
                OnLastMainTabSelectedChanged();
            }
        }
        private Nullable<global::System.Int32> _LastMainTabSelected;
        partial void OnLastMainTabSelectedChanging(Nullable<global::System.Int32> value);
        partial void OnLastMainTabSelectedChanged();

        #endregion
    
    }

    #endregion
    
}
